####################################################################################################
# Copyright (c) 2019 - 2020, EPFL / Blue Brain Project
# Author(s): Marwan Abdellah <marwan.abdellah@epfl.ch>
#
# This file is part of VessMorphoVis <https://github.com/BlueBrain/VessMorphoVis>
#
# This program is free software: you can redistribute it and/or modify it under the terms of the
# GNU General Public License as published by the Free Software Foundation, version 3 of the License.
#
# This Blender-based tool is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
# PURPOSE.  See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with this program.
# If not, see <http://www.gnu.org/licenses/>.
####################################################################################################

####################################################################################################
### INPUT PARAMETERS
####################################################################################################
# Blender executable
# By default, we will use the system-installed Blender, otherwise you can use a custom version
# BLENDER_EXECUTABLE=/bbp/bbp-blender-packages/blender-2.79b-linux-glibc219-x86_64/blender
BLENDER_EXECUTABLE=/bbp/blender/blender-2.80-linux-glibc217-x86_64/blender

# Input source
# Use ['file'] for loading .H5 or .VMV morphology files
# Use ['directory'] for loading a directory contains .H5 or .VMV morphology files
INPUT=file

# Morphology file, if INPUT is set to 'file', otherwise ignored.
# MORPHOLOGY_FILE=SOME_MORPHOLOGY_FILE
MORPHOLOGY_FILE=/abdellah-1/bbp/dataset/vasculature/samples_vasculature/test7.h5

# Morphology directory, if INPUT is set to 'directory', otherwise ignored.
MORPHOLOGY_DIRECTORY=/computer/bbp-blender-development/blender-vmv/Blender-2.80.app/Contents/Resources/2.80/scripts/addons/VessMorphoVis/data/morphologies

####################################################################################################
### OUTPUT PARAMETERS
####################################################################################################
# Output directory
# This is where all the results (morphologies, meshes, images, etc...) will be generated
OUTPUT_DIRECTORY=/home/abdellah/Desktop/testing-vmv-cli

####################################################################################################
# DISTRIBUTION PARAMETERS
####################################################################################################
# Execution node
# Use ['local'] for running the add-on on your machine
# Use ['cluster'] for running the add-on on the BBP visualization cluster (only for BBP users)
EXECUTION_NODE=local

####################################################################################################
# MORPHOLOGY SKELETON PARAMETERS
####################################################################################################
# Reconstruct morphology skeleton to export it later, 'yes/no'
RECONSTRUCT_MORPHOLOGY_SKELETON=no

# Skeleton style
# Use ['original'] for loading the original as specified in the morphology file, default
# Use ['zigzag'] for constructing a zigzag algorithm
SKELETON=zigzag

# Morphology reconstruction method
# Use ['connected-sections'], where sections are connected together (without morphology repair)
# Use ['disconnected-sections'], where sections are disconnected from each others
# Use ['disconnected-segments'], where segments are disconnected
MORPHOLOGY_RECONSTRUCTION_ALGORITHM=connected-sections-repaired

# Sections' radii
# Use ['default'] to use the reported radii in the morphology file
# Use ['scaled'] to scale the branches with a specific scale factor RADII_SCALE_FACTOR
# Use ['fixed'] to have fixed section radius FIXED_SECTION_RADIUS for all the arbors
# Use ['minimum'] to set the radii of samples below the MINIMUM_SECTION_RADIUS value to this one
SET_SECTION_RADII=minimum

# Radii scale factor if the 'SET_SECTION_RADII=scaled' method is used, otherwise ignored
RADII_SCALE_FACTOR=1.0

# Section fixed radius value if the 'SET_SECTION_RADII=fixed' method is used, otherwise ignored
FIXED_SECTION_RADIUS=1.0

# If a sample has a smaller radius, use this value
MINIMUM_SECTION_RADIUS=4.0

# Sections bevel sides, reflecting number of sides per cross section (4, 8, 16 or 32), by default 16
SECTION_BEVEL_SIDES=16

# Save the vascular morphology into a .BLEND file including all the shading that is applied to it
# Use ['yes' or 'no']
EXPORT_VASCULAR_MORPHOLOGY_BLEND=no

####################################################################################################
# MESH PARAMETERS
####################################################################################################

# Reconstruct the entire neuron mesh as a piecewise object, 'yes/no'
RECONSTRUCT_VASCULAR_MESH=yes

# Meshing technique
# Use ['piecewise-watertight'] for creating piece-wise watertight meshes
# Use ['meta-balls'] for creating simulation-ready meshes that are watertight
MESHING_TECHNIQUE=meta-balls

# Set the MetaBalls resolution
# Use ['auto'] to set the resolution automatically based in the smallest radius of the skeleton
# Use ['user-defined'] to specify
META_BALLS_RESOLUTION_SETTING=user-defined

# Set the resolution value of the MetaBalls object
# This value is only enabled if the META_BALLS_RESOLUTION_SETTING is set to ['user-defined']
META_BALLS_RESOLUTION_VALUE=5.0

# Neuron surface
# Use ['smooth'] for smooth surface
# Use ['rough'] for rough surface
SURFACE=rough

# Neuron edges
# Use ['smooth'] for smooth edges
# Use ['hard'] for hard edges
EDGES=smooth

# Mesh Tessellation (between 0.1 and 1.0)
TESSELLATION_LEVEL=1.0

# Export the vascular mesh as a .PLY file
# Use ['yes' or 'no']
EXPORT_VASCULAR_MESH_PLY=yes

# Export the vascular mesh as a .OBJ file
# Use ['yes' or 'no']
EXPORT_VASCULAR_MESH_OBJ=no

# Export the vascular mesh as a .STL file
# Use ['yes' or 'no']
EXPORT_VASCULAR_MESH_STL=no

# Save the vascular mesh as a .BLEND file with all the shading applied to it
# Use ['yes' or 'no']
EXPORT_VASCULAR_MESH_BLEND=no

####################################################################################################
# MATERIALS PARAMETERS
####################################################################################################
# Vascular morphology RGB color in the form of 'R_G_B'
MORPHOLOGY_COLOR=1_0_0

# Vascular mesh RGB color in the form of 'R_G_B'
MESH_COLOR=1_0_0

# Shader, refer to the documentation to see all the shading modes and some examples 
# Use ['lambert']
# Use ['electron-light']
# Use ['electron-dark']
# Use ['super-electron-light']
# Use ['super-electron-dark']
# Use ['shadow']
# Use ['glossy']
# Use ['glossy-bumpy']
# Use ['flat']
# Use ['voronoi']
SHADER=lambert

####################################################################################################
# RENDERING PARAMETERS
####################################################################################################
# Render a static frame of the reconstructed morphology
# Use ['yes' or 'no']
RENDER_VASCULAR_MORPHOLOGY=no

# Render a 360 sequence of the reconstructed morphology skeleton
# Use ['yes' or 'no']
RENDER_VASCULAR_MORPHOLOGY_360=no

# Render a static frame of the reconstructed vascular mesh
# Use ['yes' or 'no']
RENDER_VASCULAR_MESH=yes

# Render a 360 sequence of the reconstructed vascular mesh
# Use ['yes' or 'no']
RENDER_VASCULAR_MESH_360=no

# Renders a frame to scale that is a factor of the largest dimension of the morphology
# Use ['yes' or 'no']
RENDER_TO_SCALE=no

# Frame resolution, only used if RENDER_TO_SCALE is set to no
FULL_VIEW_FRAME_RESOLUTION=1024

# Frame scale factor (only in case of RENDER_TO_SCALE is set to yes), default 1.0
FULL_VIEW_SCALE_FACTOR=10.0

# Camera view
# Use ['front'] to render the front view
# Use ['side'] to render the side view
# Use ['top'] to render the top view
# Use ['all'] to render all views: front, side and top at the same time.
CAMERA_VIEW=top

# Camera projection
# Use ['orthographic'] to render an orthographic projection
# Use ['perspective'] to render a perspective projection
CAMERA_PROJECTION=orthographic

####################################################################################################
# ANALYSIS PARAMETERS
####################################################################################################
# Analyse the morphology skeleton and export the results to a text file for plotting
# Use ['yes' or 'no']
ANALYZE_MORPHOLOGY_SKELETON=no